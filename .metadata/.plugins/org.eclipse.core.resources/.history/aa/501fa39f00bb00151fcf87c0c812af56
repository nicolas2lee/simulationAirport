package enstabretagne.Scenario;

import enstabretagne.SimEntity.airport.airport;
import enstabretagne.base.math.MoreRandom;
import enstabretagne.base.time.LogicalDateTime;
import enstabretagne.base.time.LogicalDuration;
import enstabretagne.base.utility.CategoriesGenerator;
import enstabretagne.simulation.components.ScenarioId;
import enstabretagne.simulation.components.SimFeatures;
import enstabretagne.simulation.components.SimScenario;
import enstabretagne.simulation.core.SimEngine;
import enstabretagne.simulation.core.SimEvent;

public class airportScenario extends SimScenario {
	
	private CategoriesGenerator arrivalDelayRecordingCatGen;
	private MoreRandom random;
	private LogicalDuration beginFlightTime;
	private LogicalDuration endFlightTime;
	
	public airportScenario(SimEngine engine,
			ScenarioId scenarioId, 
			SimFeatures features,LogicalDateTime start, LogicalDateTime end) {
		super(engine, scenarioId,  features, start, end);
		airportScenarioFeatures asf = (airportScenarioFeatures) features;
		arrivalDelayRecordingCatGen = asf.getArrivalDelayRecordingCatGen();
		
		random = new MoreRandom(MoreRandom.globalSeed);
		
		beginFlightTime = LogicalDuration.fromString(asf.getBeginFlightTime());
		endFlightTime = LogicalDuration.fromString(asf.getEndFlightTime());
		
		Add(new Action_EntityCreation(airport.class, asf.getApFeatures().getId(), asf.getApFeatures(), asf.getAirportinit()));
		
	}
	
	class beginArriveAirplane extends SimEvent{
		
	}

}
